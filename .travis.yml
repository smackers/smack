language: generic
os: linux
dist: bionic

addons:
  apt:
    packages:
      - git
      - cmake
      - python3-yaml
      - python3-psutil
      - python3-pip
      - unzip
      - ninja-build
      - libboost-all-dev

env:
  global:
    - COMPILER_NAME=clang COMPILER=clang++ CXX=clang++ CC=clang
  jobs:
    - TRAVIS_ENV="--exhaustive --folder=c/basic"
    - TRAVIS_ENV="--exhaustive --folder=c/data"
    - TRAVIS_ENV="--exhaustive --folder=c/ntdrivers-simplified"
    - TRAVIS_ENV="--exhaustive --folder=c/ntdrivers"
    - TRAVIS_ENV="--exhaustive --folder=c/bits"
    - TRAVIS_ENV="--exhaustive --folder=c/float"
    - TRAVIS_ENV="--exhaustive --folder=c/locks"
    - TRAVIS_ENV="--exhaustive --folder=c/contracts"
    - TRAVIS_ENV="--exhaustive --folder=c/simd"
    - TRAVIS_ENV="--exhaustive --folder=c/memory-safety"
    - TRAVIS_ENV="--exhaustive --folder=c/pthread"
    - TRAVIS_ENV="--exhaustive --folder=c/pthread_extras"
    - TRAVIS_ENV="--exhaustive --folder=c/strings"
    - TRAVIS_ENV="--exhaustive --folder=c/special"
    - TRAVIS_ENV="--exhaustive --folder=rust/array --languages=rust"
    - TRAVIS_ENV="--exhaustive --folder=rust/basic --languages=rust"
    - TRAVIS_ENV="--exhaustive --folder=rust/box --languages=rust"
    - TRAVIS_ENV="--exhaustive --folder=rust/functions --languages=rust"
    - TRAVIS_ENV="--exhaustive --folder=rust/generics --languages=rust"
    - TRAVIS_ENV="--exhaustive --folder=rust/loops --languages=rust"
    - TRAVIS_ENV="--exhaustive --folder=rust/panic --languages=rust"
    - TRAVIS_ENV="--exhaustive --folder=rust/recursion --languages=rust"
    - TRAVIS_ENV="--exhaustive --folder=rust/structures --languages=rust"
    - TRAVIS_ENV="--exhaustive --folder=rust/vector --languages=rust"

before_install:
  - sudo rm -rf /usr/local/clang-7.0.0

install:
  - source ./bin/versions
  - wget -O - http://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
  - sudo add-apt-repository "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-${LLVM_SHORT_VERSION} main"
  - wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
  - sudo dpkg -i packages-microsoft-prod.deb
  - sudo apt-get install -y apt-transport-https
  - sudo apt-get update
  - sudo apt-get install -y clang-${LLVM_SHORT_VERSION} clang-format-${LLVM_SHORT_VERSION} llvm-${LLVM_SHORT_VERSION}-dev dotnet-sdk-3.1
  - pip3 install -U flake8
  - sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-${LLVM_SHORT_VERSION} 20
  - sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-${LLVM_SHORT_VERSION} 20
  - sudo update-alternatives --install /usr/bin/llvm-config llvm-config /usr/bin/llvm-config-${LLVM_SHORT_VERSION} 20
  - sudo update-alternatives --install /usr/bin/llvm-link llvm-link /usr/bin/llvm-link-${LLVM_SHORT_VERSION} 20
  - sudo update-alternatives --install /usr/bin/llvm-dis llvm-dis /usr/bin/llvm-dis-${LLVM_SHORT_VERSION} 20
  - sudo update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-${LLVM_SHORT_VERSION} 20

before_script:
  - python3 --version
  - $CXX --version
  - $CC --version
  - clang --version
  - clang++ --version
  - llvm-link --version
  - llvm-config --version

script:
  - ./format/run-clang-format.py -e test/c/basic/transform-out.c -r lib/smack include/smack share/smack/include share/smack/lib test examples
  - flake8 test/regtest.py share/smack/ --extend-exclude share/smack/svcomp/,share/smack/reach.py
  - INSTALL_RUST=1 ./bin/build.sh
